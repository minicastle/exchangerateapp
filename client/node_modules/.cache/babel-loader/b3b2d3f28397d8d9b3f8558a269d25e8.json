{"ast":null,"code":"import { createStore, combineReducers } from \"redux\";\nimport { persistReducer, persistStore } from \"redux-persist\";\nimport session from \"redux-persist/lib/storage/session\";\nconst persistConfig = {\n  key: \"root\",\n  storage: session\n};\n\nfunction reducer(state, action) {\n  if (state === undefined) {\n    return {\n      count: 0\n    };\n  } else if (action.type === \"INCREMENT\") {\n    return Object.assign({}, state, {\n      count: state.count + 1\n    });\n  } else {\n    return state;\n  }\n}\n\n;\nconst rootreducer = combineReducers({\n  reducer\n});\nconst store = createStore(persistReducer(persistConfig, rootreducer));\nconst persistor = persistStore(store);\nexport { store, persistor };","map":{"version":3,"sources":["C:/Users/GANGBUK/Downloads/project/portpolio/projectexchangerate/client/src/store.js"],"names":["createStore","combineReducers","persistReducer","persistStore","session","persistConfig","key","storage","reducer","state","action","undefined","count","type","Object","assign","rootreducer","store","persistor"],"mappings":"AAAA,SAAQA,WAAR,EAAoBC,eAApB,QAA0C,OAA1C;AACA,SAASC,cAAT,EAAwBC,YAAxB,QAA4C,eAA5C;AACA,OAAOC,OAAP,MAAoB,mCAApB;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,GAAG,EAAC,MADc;AAElBC,EAAAA,OAAO,EAACH;AAFU,CAAtB;;AAKA,SAASI,OAAT,CAAiBC,KAAjB,EAAuBC,MAAvB,EAA8B;AAC1B,MAAGD,KAAK,KAAKE,SAAb,EAAuB;AACnB,WAAO;AAACC,MAAAA,KAAK,EAAC;AAAP,KAAP;AACH,GAFD,MAGK,IAAGF,MAAM,CAACG,IAAP,KAAgB,WAAnB,EAA+B;AAChC,WAAOC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAiBN,KAAjB,EAAuB;AAACG,MAAAA,KAAK,EAACH,KAAK,CAACG,KAAN,GAAY;AAAnB,KAAvB,CAAP;AACH,GAFI,MAGD;AACA,WAAOH,KAAP;AACH;AACJ;;AAAA;AAED,MAAMO,WAAW,GAAGf,eAAe,CAAC;AAACO,EAAAA;AAAD,CAAD,CAAnC;AACA,MAAMS,KAAK,GAAGjB,WAAW,CAACE,cAAc,CAACG,aAAD,EAAeW,WAAf,CAAf,CAAzB;AACA,MAAME,SAAS,GAAGf,YAAY,CAACc,KAAD,CAA9B;AAEA,SAAQA,KAAR,EAAcC,SAAd","sourcesContent":["import {createStore,combineReducers} from \"redux\";\r\nimport { persistReducer,persistStore } from \"redux-persist\";\r\nimport session from \"redux-persist/lib/storage/session\";\r\n\r\nconst persistConfig = {\r\n    key:\"root\",\r\n    storage:session\r\n};\r\n\r\nfunction reducer(state,action){\r\n    if(state === undefined){\r\n        return {count:0};\r\n    }\r\n    else if(action.type === \"INCREMENT\"){\r\n        return Object.assign({},state,{count:state.count+1});\r\n    }\r\n    else{\r\n        return state;\r\n    }\r\n};\r\n\r\nconst rootreducer = combineReducers({reducer});\r\nconst store = createStore(persistReducer(persistConfig,rootreducer));\r\nconst persistor = persistStore(store);\r\n\r\nexport {store,persistor};"]},"metadata":{},"sourceType":"module"}